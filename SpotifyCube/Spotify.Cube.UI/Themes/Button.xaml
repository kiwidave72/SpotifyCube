<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style
        x:Key="ButtonFocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeThickness="1"
                        StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Resource dictionary entries should be defined here. -->
    <LinearGradientBrush
        x:Key="ButtonNormalBackground"
        EndPoint="0,1"
        StartPoint="0,0">
        <GradientStop
            Color="#FFCACACA"
            Offset="0.008" />
        <GradientStop
            Color="#FFE5E5E5"
            Offset="0.5" />
        <GradientStop
            Color="#FFD4D4D4"
            Offset="0.5" />
        <GradientStop
            Color="#FF9B9B9B"
            Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush
        x:Key="ButtonPressedBackground"
        EndPoint="0,1"
        StartPoint="0,0">
        <GradientStop
            Color="#FFCACACA"
            Offset="0.992" />
        <GradientStop
            Color="#FFD4D4D4"
            Offset="0.5" />
        <GradientStop
            Color="#FFE5E5E5"
            Offset="0.5" />
        <GradientStop
            Color="#FF8D8D8D"
            Offset="0.14" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="ButtonNormalBorder"
        Color="#FF707070" />
    <Style
        TargetType="{x:Type Button}">
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource ButtonFocusVisual}" />
        <Setter
            Property="Background"
            Value="{StaticResource ButtonNormalBackground}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource ButtonNormalBorder}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="Padding"
            Value="5,2,5,2" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        x:Name="Chrome"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4"
                        SnapsToDevicePixels="true"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsKeyboardFocused"
                            Value="true">
                        </Trigger>
                        <Trigger
                            Property="ToggleButton.IsChecked"
                            Value="true">
                        </Trigger>
                        <Trigger
                            Property="IsPressed"
                            Value="True">
                            <Setter
                                Property="Background"
                                Value="{DynamicResource ButtonPressedBackground}" />
                        </Trigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                Property="Foreground"
                                Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SuperSimpleButtonStyle"
        TargetType="{x:Type Button}"
        BasedOn="{StaticResource {x:Type Button}}">
        <Setter
            Property="Foreground"
            Value="#FFBBBBBB" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        Background="Transparent">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="IsMouseOver"
                        Value="True" />
                    <Condition
                        Property="IsPressed"
                        Value="False" />
                </MultiTrigger.Conditions>
                <Setter
                    Property="Foreground"
                    Value="White" />
            </MultiTrigger>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Opacity"
                    Value="0.2" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="CircleIconButtonStyle"
        TargetType="{x:Type Button}"
        BasedOn="{StaticResource SuperSimpleButtonStyle}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        Background="Transparent">
                        <Grid>
                            <Ellipse
                                StrokeThickness="2"
                                Stroke="{TemplateBinding Foreground}" />
                            <ContentPresenter />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>